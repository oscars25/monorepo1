# 1. ETAPA DE CONSTRUCCIÓN (BUILD STAGE)
# Imagen base para construir la aplicación Angular
FROM node:20-alpine AS build
WORKDIR /app
COPY package*.json ./
# Angular necesita la CLI globalmente
# ...
RUN npm install -g @angular/cli
# Usamos --legacy-peer-deps para ignorar los conflictos de @angular/cdk
RUN npm install --legacy-peer-deps
# ...

# Copia el código fuente
COPY . .

# Comando de construcción de Angular
# Asume que 'ng build' compila los archivos estáticos en la carpeta 'dist'
RUN ng build

# -----------------------------------------------------------

# 2. ETAPA DE EJECUCIÓN (RUNTIME STAGE)
# Usamos una imagen ligera de Nginx para servir la aplicación estática
FROM nginx:alpine
# Copia los archivos construidos desde la etapa anterior
COPY --from=build /app/dist/frontend-dashboard /usr/share/nginx/html
# Copia la configuración de Nginx (se asume que la crearás en el siguiente paso)
COPY nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]